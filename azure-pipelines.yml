trigger: none

pool:
  vmImage: windows-latest

variables:
  npm_config_cache: 'C:/hostedtoolcache/windows/.npm' #'$(Agent.ToolsDirectory)\.npm' #$(Agent.HomeDirectory)/.npm node
  dotnet_config_cache: 'C:/hostedtoolcache/windows/dotnet'
steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        echo "$(Agent.ToolsDirectory)/.npm"
  #       cd $(Agent.ToolsDirectory)
  #       ls -lrta
  #     # echo "Agent.BuildDirectory: $(Agent.BuildDirectory)"
  #     # echo "Agent.HomeDirectory: $(Agent.HomeDirectory)"
  #     # echo "Agent.TempDirectory: $(Agent.TempDirectory)"
  #     # echo "Agent.ToolsDirectory: $(Agent.ToolsDirectory)"
  #     # echo "Agent.WorkFolder: $(Agent.WorkFolder)"
  #     # echo "Build.ArtifactStagingDirectory: $(Build.ArtifactStagingDirectory)"
  #     # echo "Build.BinariesDirectory: $(Build.BinariesDirectory)"
  #     # echo "Build.Repository.LocalPath: $(Build.Repository.LocalPath)"
  #     # echo "Build.SourcesDirectory: $(Build.SourcesDirectory)"
  #     # echo "Build.StagingDirectory: $(Build.StagingDirectory)"
  #     # echo "Common.TestResultsDirectory: $(Common.TestResultsDirectory)"
  #     # echo "Pipeline.Workspace: $(Pipeline.Workspace)"
  #     # echo "System.DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)"
  #     # ls -lrta
  - task: Cache@2
    displayName: 'Cache'
    inputs:
      key: $(Build.SourcesDirectory)/package.json #'npm | "$(Agent.OS)" | $(Build.SourcesDirectory)/package.json'
      # restoreKeys: |
      #   npm | "$(Agent.OS)"
      #   npm
      path: '$(npm_config_cache)'
      cacheHitVar: 'CACHE_RESTORED'
  - task: NodeTool@0
    displayName: 'Install Node 8.9.1' #building
    enabled: true
    inputs:
      versionSpec: '8.9.1'
      workingDir: $(npm_config_cache)
  - task: Npm@1
    displayName: 'Global - Tools - Install npm 6.4.1' # bulding
    enabled: true
    inputs:
      command: 'custom'
      workingDir: '$(npm_config_cache)'
      customCommand: 'i -g npm@6.4.1' #'--cache $(npm_config_cache)'
  - task: UseDotNet@2
    displayName: 'Global - Tools - Ensure .NET 6.0 SDK'
    enabled: true
    inputs:
      version: '6.0.x'
      performMultiLevelLookup: true  
      installationPath: '$(dotnet_config_cache)'
  # - task: gulp@0
  #   inputs:
  #     gulpFile: 'gulpfile.js'
  #     targets: 'dsdsdvd'
  #     arguments: 'xvcxvc'
  #     workingDirectory: 'vcxvcxv'
  #     gulpjs: 'node_modules/gulp/bin/gulp.js'
  #     enableCodeCoverage: false

  # - task: Bash@3
  #   inputs:
  #     targetType: 'inline'
  #     script: |
  #       # Write your commands here
  #       cd $(Agent.ToolsDirectory)
  #       ls -lrta
  #       cd $(Agent.WorkFolder)
  #       ls -lrta
  #       cd $(Agent.HomeDirectory)
  #       ls -lrta
  #       cd $(Agent.TempDirectory)
  #       ls -lrta